[{"F:\\CloudwareInterface\\CloudwareInterface.Frontend\\frontend\\src\\index.js":"1","F:\\CloudwareInterface\\CloudwareInterface.Frontend\\frontend\\src\\App.js":"2","F:\\CloudwareInterface\\CloudwareInterface.Frontend\\frontend\\src\\Components\\Card.js":"3","F:\\CloudwareInterface\\CloudwareInterface.Frontend\\frontend\\src\\QueryGenerator.js":"4","F:\\CloudwareInterface\\CloudwareInterface.Frontend\\frontend\\src\\Components\\Pie.js":"5","F:\\CloudwareInterface\\CloudwareInterface.Frontend\\frontend\\src\\Components\\CardCreator.js":"6","F:\\CloudwareInterface\\CloudwareInterface.Frontend\\frontend\\src\\Components\\DraggableModal.js":"7","F:\\DocumentLab\\Applications\\DocumentLab.Frontend\\src\\index.js":"8","F:\\DocumentLab\\Applications\\DocumentLab.Frontend\\src\\App.js":"9","F:\\DocumentLab\\Applications\\DocumentLab.Frontend\\src\\Components\\Card.js":"10"},{"size":266,"mtime":1606849977284,"results":"11","hashOfConfig":"12"},{"size":6213,"mtime":1606907327247,"results":"13","hashOfConfig":"12"},{"size":503,"mtime":1606850852937,"results":"14","hashOfConfig":"12"},{"size":1196,"mtime":1606903616937,"results":"15","hashOfConfig":"12"},{"size":1580,"mtime":1606855662637,"results":"16","hashOfConfig":"12"},{"size":5921,"mtime":1606907414171,"results":"17","hashOfConfig":"12"},{"size":655,"mtime":1606907358827,"results":"18","hashOfConfig":"12"},{"size":266,"mtime":1606849977284,"results":"19","hashOfConfig":"20"},{"size":8103,"mtime":1607604063783,"results":"21","hashOfConfig":"20"},{"size":635,"mtime":1607513060703,"results":"22","hashOfConfig":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"17ml4r4",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1km4d9",{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"F:\\CloudwareInterface\\CloudwareInterface.Frontend\\frontend\\src\\index.js",[],["47","48"],"F:\\CloudwareInterface\\CloudwareInterface.Frontend\\frontend\\src\\App.js",[],"F:\\CloudwareInterface\\CloudwareInterface.Frontend\\frontend\\src\\Components\\Card.js",[],"F:\\CloudwareInterface\\CloudwareInterface.Frontend\\frontend\\src\\QueryGenerator.js",[],"F:\\CloudwareInterface\\CloudwareInterface.Frontend\\frontend\\src\\Components\\Pie.js",[],"F:\\CloudwareInterface\\CloudwareInterface.Frontend\\frontend\\src\\Components\\CardCreator.js",["49"],"F:\\CloudwareInterface\\CloudwareInterface.Frontend\\frontend\\src\\Components\\DraggableModal.js",[],"F:\\DocumentLab\\Applications\\DocumentLab.Frontend\\src\\index.js",[],["50","51"],"F:\\DocumentLab\\Applications\\DocumentLab.Frontend\\src\\App.js",["52","53","54"],"import './App.css';\nimport React, { Component } from 'react'\nimport Card from './Components/Card';\nimport { FcDocument, FcFile } from 'react-icons/fc'\nimport { BiError } from 'react-icons/bi'\nimport Tooltip from 'react-bootstrap/Tooltip'\nimport axios from 'axios';\nimport { OverlayTrigger, Tabs, Tab } from 'react-bootstrap';\nimport MonacoEditor from 'react-monaco-editor';\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      analyzing: null,\n      selectedDocumentIndex: 0,\n      result: [],\n      script: \"\",\n      typingTimeout: 0,\n      error: null,\n      focusOffset: 0,\n      dragOver: false,\n      heightCoefficient: 0,\n      widthCoefficient: 0,\n      imgHeight: 0,\n      imgWidth: 0\n    }\n  };\n\n  editorDidMount(editor, monaco) {\n    editor.focus();\n  }\n\n  dragOver = (e) => {\n    e.preventDefault();\n    this.setState({ dragOver: true })\n  }\n\n  dragEnter = (e) => {\n      e.preventDefault();\n  }\n\n  dragLeave = (e) => {\n      e.preventDefault();\n      this.setState({ dragOver: false })\n    }\n\n  fileDrop = (e) => {\n      e.preventDefault();\n      const { result } = this.state\n      const { name } = e.dataTransfer.files[0]\n      const reader = new FileReader()\n      reader.readAsDataURL(e.dataTransfer.files[0])\n      reader.onload = () => {\n        this.setState({ analyzing: true }\n          ,() => axios.post(\"https://localhost:44343/api/document/analyze\", { ImageAsBase64: reader.result } )\n            .then(res => {\n              result.push({ name, analyzedDocument: res.data.AnalyzedDocument, imageBase64: reader.result })\n              this.setState({ result, selectedDocumentIndex: 0, analyzing: false })\n            }))\n      }\n  }\n\n  interpretScript = () => {\n    const { script, result, selectedDocumentIndex } = this.state\n\n    if (!result || ! result[selectedDocumentIndex] || !result[selectedDocumentIndex].analyzedDocument)\n      return;\n\n    axios.post(\"https://localhost:44343/api/document/interpret\", { AnalyzedDocument: result[selectedDocumentIndex].analyzedDocument, Script: script })\n      .then(res => {\n        if (res.data.InterpretedDocument) {\n          result[selectedDocumentIndex] = { ...result[selectedDocumentIndex], data: res.data.InterpretedDocument }\n\n          this.setState({ result, error: null })\n        } \n        else if (res.data.Message) {\n          this.setState({ error: res.data.Message })\n        }\n      })\n  }\n\n  onKeyDown = (newValue, e) => {\n    const currentScript = newValue\n\n    this.setState({script: currentScript},\n      () => {\n        if (this.state.typingTimeout) {\n          clearTimeout(this.state.typingTimeout);\n        }\n    \n        this.setState({\n          typingTimeout: setTimeout(() => this.interpretScript(), 500)\n        })\n      })\n  }\n\n  onTabSelect = (key) => \n  {\n    this.setState({ selectedDocumentIndex: key })\n  }\n  \n  onLoad = (img) => {\n    if (img) {\n      this.setState({\n        heightCoefficient: (img.target.offsetHeight / img.target.naturalHeight),\n        widthCoefficient: (img.target.offsetWidth / img.target.naturalWidth),\n        imgHeight: img.target.offsetHeight,\n        imgWidth: img.target.offsetWidth\n      })\n    }\n  }\n\n  fileOverlay = (result, selectedDocumentIndex, widthCoefficient, heightCoefficient) =>(\n    !result || !(result[selectedDocumentIndex] && result[selectedDocumentIndex].analyzedDocument) ? '' :\n      result[selectedDocumentIndex]\n        .analyzedDocument\n        .Contents\n        .map(x => x \n          && x.map(y => y \n              && <div>\n                  <OverlayTrigger \n                    placement=\"left\"\n                    delay={{ show: 250, hide: 300 }}\n                    overlay={(props) => (\n                      <Tooltip\n                        className=\"ResultToolTip\"\n                        id=\"InfoTooltip\" {...props}\n                      >\n                        {y.map(z => <div>{z.TextType} - {z.Value}</div>)}\n                      </Tooltip>\n                      )}\n                  >\n                      <div style={\n                        { \n                          position: 'absolute', \n                          top: y[0] && y[0].BoundingBox.Y * heightCoefficient + 32 + 'px', \n                          left: y[0] && y[0].BoundingBox.X * widthCoefficient + 6 + 'px', \n                          fontSize: '15px', \n                          width: y[0] && y[0].BoundingBox.Width ? y[0].BoundingBox.Width * widthCoefficient + 5: 0, \n                          height: y[0] && y[0].BoundingBox.Height ? y[0].BoundingBox.Height * heightCoefficient + 5 : 0,\n                          border: '1px solid rgba(0,0,0,0.05)'\n                      }}/>\n                  </OverlayTrigger>\n                </div>\n            )\n          )\n  )\n\n  render() {\n    const { analyzing, result, selectedDocumentIndex, script, error, dragOver, heightCoefficient, widthCoefficient } = this.state\n    \n    const codeContent = (\n      <MonacoEditor \n        onChange={this.onKeyDown} \n        editorDidMount={this.editorDidMount}\n        id=\"CodeArea\"\n        className=\"CodeArea\"\n        language=\"javascript\"\n        value={script}\n      />\n    )\n    \n    const overlay = this.fileOverlay(result, selectedDocumentIndex, widthCoefficient, heightCoefficient)\n\n    const fileContent = (\n      <div className=\"DropFileArea col-12\" \n        onDragOver={this.dragOver}\n        onDragEnter={this.dragEnter}\n        onDragLeave={this.dragLeave}\n        onDrop={this.fileDrop}\n      >\n          <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={selectedDocumentIndex}\n            onSelect={this.onTabSelect}\n          >\n            {result.map((x, i) => x && <Tab className=\"FileTab\" eventKey={i} title={x.name} />)}\n            {analyzing ? <Tab className=\"FileTab\" eventKey={selectedDocumentIndex} title='Analyzing ... ' /> : ''}\n          </Tabs>\n        {\n          !result || \n          !(result[selectedDocumentIndex] \n            && result[selectedDocumentIndex].imageBase64) \n              ? <FcFile className={`DropFileImage ${analyzing ? 'rotate360' : (dragOver ? 'rotate5' : '')}`} /> \n              : <div><img onLoad={this.onLoad} className={`Fill`} src={result[selectedDocumentIndex].imageBase64} />{overlay && overlay.flat()}</div>\n        }\n      </div>\n    )\n\n    const resultContent = (\n      <div>\n        {result && result[selectedDocumentIndex] && result[selectedDocumentIndex].data && result[selectedDocumentIndex].data.split(\"\\r\\n\").map(x => {\n          const margin = `${x.indexOf('\"')}`\n          return <span className={`indent${margin == -1 ? 2 : margin == 4 ? 4 : 2}`}>{x}<br/></span>\n        })}\n      </div>\n    )\n\n    return (\n      <div className=\"App container-fluid FullWidth\">\n        <div className=\"Top\">\n          <span><FcDocument /></span>\n          <span>DocumentLab editor</span>\n        </div>\n        <div className=\"MainArea FullHeight\">\n          <div className=\"Row Flex FullHeight\">\n            <div className=\"col-7 FullWidth CodeArea\">\n              <Card \n                title=\"Code\" \n                subtitle=\"Write your script here\"\n                warning={error && <OverlayTrigger\n                  placement=\"right\"\n                  delay={{ show: 250, hide: 400 }}\n                  overlay={(props) => (\n                    <Tooltip id=\"ErrorTooltip\" {...props}>\n                      <div>\n                        {error}\n                      </div>\n                    </Tooltip>\n                  )}\n                >\n                  <BiError stlye={{marginLeft: 30, textSize: 30}}/>\n                </OverlayTrigger>}\n                content={codeContent} fullHeight \n              />\n            </div>\n            <div className=\"col-5 FullWidth\">\n              <Card title=\"File upload\" subtitle=\"drag and drop your file here\" content={fileContent} />\n            </div>\n          </div>\n        </div>\n        <div className=\"FullWidth ResultArea\">\n          <Card title=\"Result\" subtitle=\"your interpretation results will show up here\" content={resultContent} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","F:\\DocumentLab\\Applications\\DocumentLab.Frontend\\src\\Components\\Card.js",[],["55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":5,"column":54,"nodeType":"63","messageId":"64","endLine":5,"endColumn":67},{"ruleId":"57","replacedBy":"65"},{"ruleId":"59","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":187,"column":22,"nodeType":"69","endLine":187,"endColumn":117},{"ruleId":"70","severity":1,"message":"71","line":196,"column":51,"nodeType":"72","messageId":"73","endLine":196,"endColumn":53},{"ruleId":"70","severity":1,"message":"71","line":196,"column":70,"nodeType":"72","messageId":"73","endLine":196,"endColumn":72},{"ruleId":"57","replacedBy":"74"},{"ruleId":"59","replacedBy":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'generateQuery' is defined but never used.","Identifier","unusedVar",["76"],["77"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["76"],["77"],"no-global-assign","no-unsafe-negation"]